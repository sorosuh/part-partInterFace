{
  "stats": {
    "suites": 10,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2020-04-24T07:53:58.858Z",
    "end": "2020-04-24T07:54:03.254Z",
    "duration": 4396,
    "testsRegistered": 9,
    "passPercent": 66.7,
    "pendingPercent": 0,
    "other": 3,
    "hasOther": true,
    "skipped": 3,
    "hasSkipped": true,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "a6b2b933-c8ca-493c-a05c-104844bb8463",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "1a908562-d6d8-42f7-9c76-27e7c019f815",
        "title": "Public HTTP APIs",
        "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
        "file": "\\tests\\userProfile\\userProfileTest.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "1a2a3993-4f68-4fa8-91c2-42ce7919a456",
            "title": "signUp",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای ثبت نام",
                "fullTitle": "Public HTTP APIs signUp ورودی معتبر برای ثبت نام",
                "timedOut": false,
                "duration": 306,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "cc3f6e6a-8a2e-49ac-b7da-358f8e425eec",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cc3f6e6a-8a2e-49ac-b7da-358f8e425eec"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 306,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "31a1d941-e1b8-499d-88fd-97655c3d8673",
            "title": "signUp",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی تکراری برای ثبت نام",
                "fullTitle": "Public HTTP APIs signUp ورودی تکراری برای ثبت نام",
                "timedOut": false,
                "duration": 382,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "14c92928-79a3-4952-acf1-2642a507aaa4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "14c92928-79a3-4952-acf1-2642a507aaa4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 382,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "ffb053a6-8b06-4631-8b37-52c6235156e8",
            "title": "login",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای لاگین",
                "fullTitle": "Public HTTP APIs login ورودی نامعتبر برای لاگین",
                "timedOut": false,
                "duration": 586,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "4aba5cfb-41b9-46bc-80d0-986765bcd62d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4aba5cfb-41b9-46bc-80d0-986765bcd62d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 586,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "8571eeae-368c-494b-b612-e0bee09c9d9d",
            "title": "login",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای لاگین",
                "fullTitle": "Public HTTP APIs login ورودی معتبر برای لاگین",
                "timedOut": false,
                "duration": 627,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "1a4ff27c-a40f-454c-8674-e762a9095aac",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1a4ff27c-a40f-454c-8674-e762a9095aac"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 627,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "dff3791a-fe47-4a6a-8e7f-4d1d95629ca4",
            "title": "getProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای دریافت پروفایل",
                "fullTitle": "Public HTTP APIs getProfile ورودی نامعتبر برای دریافت پروفایل",
                "timedOut": false,
                "duration": 299,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "4514eaac-84a9-4ae5-9874-705224575a38",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4514eaac-84a9-4ae5-9874-705224575a38"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 299,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "c070cdb7-1d50-4d18-84d9-a1db431181d6",
            "title": "getProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای دریافت پروفایل",
                "fullTitle": "Public HTTP APIs getProfile ورودی معتبر برای دریافت پروفایل",
                "timedOut": false,
                "duration": 297,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "28b4ad7c-0e31-4f9e-b6d6-1136a66f9fcd",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "28b4ad7c-0e31-4f9e-b6d6-1136a66f9fcd"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 297,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "0c942ada-13af-414c-a688-034983c7d878",
            "title": "editProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی معتبر برای ویرایش پروفایل\"",
                "fullTitle": "Public HTTP APIs editProfile \"before all\" hook for \"ورودی معتبر برای ویرایش پروفایل\"",
                "timedOut": false,
                "duration": 550,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205122401911\",\"requestId\":\"782d9b17-6b1e-4c6b-afc5-416126a84e30\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205122401911\",\"requestId\":\"782d9b17-6b1e-4c6b-afc5-416126a84e30\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "62b1d8a3-f5c4-42c5-bf77-230732003009",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای ویرایش پروفایل",
                "fullTitle": "Public HTTP APIs editProfile ورودی معتبر برای ویرایش پروفایل",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "48a95680-d0a4-46e4-9231-2b9740635ac4",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "48a95680-d0a4-46e4-9231-2b9740635ac4"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "2ea8eea9-e393-4f7c-9161-4ae54e44d038",
            "title": "changePassword",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی نامعتبر برای پسورد\"",
                "fullTitle": "Public HTTP APIs changePassword \"before all\" hook for \"ورودی نامعتبر برای پسورد\"",
                "timedOut": false,
                "duration": 581,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205122402493\",\"requestId\":\"b1d7debb-6e03-4a08-94c9-c063de9b33fb\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205122402493\",\"requestId\":\"b1d7debb-6e03-4a08-94c9-c063de9b33fb\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "1189d509-e390-4fa5-9c83-c17452e319cd",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای پسورد",
                "fullTitle": "Public HTTP APIs changePassword ورودی نامعتبر برای پسورد",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "5dbcbcdc-f32e-487c-a418-e67d966492dc",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "5dbcbcdc-f32e-487c-a418-e67d966492dc"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "5588d35b-810e-47fa-8770-236161908d80",
            "title": "changePassword",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی معتبر برای پسورد\"",
                "fullTitle": "Public HTTP APIs changePassword \"before all\" hook for \"ورودی معتبر برای پسورد\"",
                "timedOut": false,
                "duration": 758,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205122403252\",\"requestId\":\"861d222c-6329-492d-bb55-c8cdf44ff53e\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205122403252\",\"requestId\":\"861d222c-6329-492d-bb55-c8cdf44ff53e\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "557d21d0-7cb2-45f4-8f44-80d765349c9e",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای پسورد",
                "fullTitle": "Public HTTP APIs changePassword ورودی معتبر برای پسورد",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "b402975a-c760-459f-ad47-e294383b0aad",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "b402975a-c760-459f-ad47-e294383b0aad"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2020
}