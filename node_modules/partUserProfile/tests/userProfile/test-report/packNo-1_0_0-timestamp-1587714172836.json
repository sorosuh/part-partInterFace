{
  "stats": {
    "suites": 11,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2020-04-24T07:42:54.134Z",
    "end": "2020-04-24T07:42:59.795Z",
    "duration": 5661,
    "testsRegistered": 10,
    "passPercent": 60,
    "pendingPercent": 0,
    "other": 4,
    "hasOther": true,
    "skipped": 4,
    "hasSkipped": true,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "4a6401a8-122f-4b83-b951-1c7c78803619",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "aa556764-ec7e-4064-8d7c-35dcd1841566",
        "title": "Public HTTP APIs",
        "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
        "file": "\\tests\\userProfile\\userProfileTest.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "d3ba508a-da6a-4981-9f51-31e9535c0abd",
            "title": "signUp",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای ثبت نام",
                "fullTitle": "Public HTTP APIs signUp ورودی معتبر برای ثبت نام",
                "timedOut": false,
                "duration": 1024,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "d1f92e82-b222-46b4-b1cf-0873d00eac40",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d1f92e82-b222-46b4-b1cf-0873d00eac40"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1024,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "9df80a67-e1d6-465d-83b7-3fe712136df0",
            "title": "signUp",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی تکراری برای ثبت نام",
                "fullTitle": "Public HTTP APIs signUp ورودی تکراری برای ثبت نام",
                "timedOut": false,
                "duration": 281,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "b160cc14-6256-455c-bd49-ea1931daa52f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b160cc14-6256-455c-bd49-ea1931daa52f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 281,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "82a28569-b5cf-451a-b970-34e4d276346b",
            "title": "login",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای لاگین",
                "fullTitle": "Public HTTP APIs login ورودی نامعتبر برای لاگین",
                "timedOut": false,
                "duration": 614,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "7adca499-da44-41ce-8093-aa8e3c8e2beb",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7adca499-da44-41ce-8093-aa8e3c8e2beb"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 614,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "0daa6b6b-2483-4dbf-89be-3082bb8815e8",
            "title": "login",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای لاگین",
                "fullTitle": "Public HTTP APIs login ورودی معتبر برای لاگین",
                "timedOut": false,
                "duration": 612,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "bb539b01-ffa3-4fd5-8f74-68ce0d027caa",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "bb539b01-ffa3-4fd5-8f74-68ce0d027caa"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 612,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "a747c23a-05ab-47f4-ba6e-c97c126b12d7",
            "title": "getProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای دریافت پروفایل",
                "fullTitle": "Public HTTP APIs getProfile ورودی نامعتبر برای دریافت پروفایل",
                "timedOut": false,
                "duration": 303,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "5733a99c-0060-45bb-96f0-25f6a82bfac3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5733a99c-0060-45bb-96f0-25f6a82bfac3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 303,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "296ddc7c-de75-4e89-b401-6622e94de9bd",
            "title": "getProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای دریافت پروفایل",
                "fullTitle": "Public HTTP APIs getProfile ورودی معتبر برای دریافت پروفایل",
                "timedOut": false,
                "duration": 294,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "cd7f559e-2177-460b-9e2b-840428438ed3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cd7f559e-2177-460b-9e2b-840428438ed3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 294,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "64812045-8136-4ef1-a78d-295180a2a254",
            "title": "editProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی معتبر برای ویرایش پروفایل\"",
                "fullTitle": "Public HTTP APIs editProfile \"before all\" hook for \"ورودی معتبر برای ویرایش پروفایل\"",
                "timedOut": false,
                "duration": 527,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121257794\",\"requestId\":\"3f422585-bfb9-4a00-af57-3dce021ccca3\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121257794\",\"requestId\":\"3f422585-bfb9-4a00-af57-3dce021ccca3\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "7c753a3a-b389-4cb4-b079-e19b8c0c5b5e",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای ویرایش پروفایل",
                "fullTitle": "Public HTTP APIs editProfile ورودی معتبر برای ویرایش پروفایل",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "dea7a308-c1fe-46ce-82c6-cfef59e6a19b",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "dea7a308-c1fe-46ce-82c6-cfef59e6a19b"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "a59cd6db-f062-4dfc-9b47-6255fc81cdd1",
            "title": "editProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی نامعتبر برای ویرایش پروفایل\"",
                "fullTitle": "Public HTTP APIs editProfile \"before all\" hook for \"ورودی نامعتبر برای ویرایش پروفایل\"",
                "timedOut": false,
                "duration": 552,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121258346\",\"requestId\":\"577403f4-dcfb-4602-ae68-39a34d57d2bf\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121258346\",\"requestId\":\"577403f4-dcfb-4602-ae68-39a34d57d2bf\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "8e4fa1cd-df42-4b70-95ec-6340c75b18ee",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای ویرایش پروفایل",
                "fullTitle": "Public HTTP APIs editProfile ورودی نامعتبر برای ویرایش پروفایل",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "926065b9-3f07-463a-abca-b4e405967840",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "926065b9-3f07-463a-abca-b4e405967840"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "50a8df8c-3761-498d-945c-127f2dbe4c56",
            "title": "changePassword",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی نامعتبر برای پسورد\"",
                "fullTitle": "Public HTTP APIs changePassword \"before all\" hook for \"ورودی نامعتبر برای پسورد\"",
                "timedOut": false,
                "duration": 562,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121258909\",\"requestId\":\"41bba974-2933-4842-9076-397b4354304b\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121258909\",\"requestId\":\"41bba974-2933-4842-9076-397b4354304b\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "a730c632-8e2c-4a39-a3b0-012cf9512e20",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای پسورد",
                "fullTitle": "Public HTTP APIs changePassword ورودی نامعتبر برای پسورد",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "32585a4e-ed44-4dd8-91c9-431c4ee8b79d",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "32585a4e-ed44-4dd8-91c9-431c4ee8b79d"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "c11eee31-5a56-4b8b-9860-79daaa24e1e3",
            "title": "changePassword",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی معتبر برای پسورد\"",
                "fullTitle": "Public HTTP APIs changePassword \"before all\" hook for \"ورودی معتبر برای پسورد\"",
                "timedOut": false,
                "duration": 883,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121259793\",\"requestId\":\"50ce2b39-8eda-449c-9877-db5181fb5464\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121259793\",\"requestId\":\"50ce2b39-8eda-449c-9877-db5181fb5464\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "5b021053-b34f-462c-84d1-f28e54a6c550",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای پسورد",
                "fullTitle": "Public HTTP APIs changePassword ورودی معتبر برای پسورد",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "24c9a5e8-e13e-4fc9-841a-baad2a892778",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "24c9a5e8-e13e-4fc9-841a-baad2a892778"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2020
}