{
  "stats": {
    "suites": 10,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2020-04-24T07:49:00.562Z",
    "end": "2020-04-24T07:49:04.740Z",
    "duration": 4178,
    "testsRegistered": 9,
    "passPercent": 66.7,
    "pendingPercent": 0,
    "other": 3,
    "hasOther": true,
    "skipped": 3,
    "hasSkipped": true,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "04c30d91-b6d0-4430-b093-42420a60d47b",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "8374f54e-38ed-414d-af1f-95b8b668b63c",
        "title": "Public HTTP APIs",
        "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
        "file": "\\tests\\userProfile\\userProfileTest.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "92bd25c8-7c02-4658-8806-1e21dfbf71e5",
            "title": "signUp",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای ثبت نام",
                "fullTitle": "Public HTTP APIs signUp ورودی معتبر برای ثبت نام",
                "timedOut": false,
                "duration": 304,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "5e78c215-4386-44b7-93c2-c6396604f568",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5e78c215-4386-44b7-93c2-c6396604f568"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 304,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "be921d44-08ef-4f31-b20f-456017355379",
            "title": "signUp",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی تکراری برای ثبت نام",
                "fullTitle": "Public HTTP APIs signUp ورودی تکراری برای ثبت نام",
                "timedOut": false,
                "duration": 277,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "047abeb5-69a7-4f4d-a344-ad3779357c4e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "047abeb5-69a7-4f4d-a344-ad3779357c4e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 277,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "2fe86954-d489-440d-af65-ea47d2b1d1fb",
            "title": "login",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای لاگین",
                "fullTitle": "Public HTTP APIs login ورودی نامعتبر برای لاگین",
                "timedOut": false,
                "duration": 629,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "987e36a4-cdc5-41a6-9974-651c5c028be0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "987e36a4-cdc5-41a6-9974-651c5c028be0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 629,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "6626f355-74e0-4523-8ffe-7784810f3d20",
            "title": "login",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای لاگین",
                "fullTitle": "Public HTTP APIs login ورودی معتبر برای لاگین",
                "timedOut": false,
                "duration": 556,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "98d358fc-b6a3-4434-9e1b-04c5b47e0f83",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "98d358fc-b6a3-4434-9e1b-04c5b47e0f83"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 556,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "ba915bb2-4f91-4fa5-bd1d-fd50bcb9f0bf",
            "title": "getProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای دریافت پروفایل",
                "fullTitle": "Public HTTP APIs getProfile ورودی نامعتبر برای دریافت پروفایل",
                "timedOut": false,
                "duration": 355,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "53531a5e-409f-4a7f-b80d-9586be6518f8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "53531a5e-409f-4a7f-b80d-9586be6518f8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 355,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "ece52275-e522-4e7a-afa9-bd2df88b33c8",
            "title": "getProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای دریافت پروفایل",
                "fullTitle": "Public HTTP APIs getProfile ورودی معتبر برای دریافت پروفایل",
                "timedOut": false,
                "duration": 299,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "0e8a2490-d95c-4e1e-b3b3-52ea7b073f70",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0e8a2490-d95c-4e1e-b3b3-52ea7b073f70"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 299,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "6975a904-1f67-4b37-a92d-a6c133f04431",
            "title": "editProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی معتبر برای ویرایش پروفایل\"",
                "fullTitle": "Public HTTP APIs editProfile \"before all\" hook for \"ورودی معتبر برای ویرایش پروفایل\"",
                "timedOut": false,
                "duration": 682,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121903667\",\"requestId\":\"3a10b9ad-8429-4f57-b8fd-14363991d306\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121903667\",\"requestId\":\"3a10b9ad-8429-4f57-b8fd-14363991d306\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "cce4ea40-595b-41e3-8412-0b0fcc6785eb",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای ویرایش پروفایل",
                "fullTitle": "Public HTTP APIs editProfile ورودی معتبر برای ویرایش پروفایل",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "410bd9c4-e8aa-477c-a48f-d5d3b62df26b",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "410bd9c4-e8aa-477c-a48f-d5d3b62df26b"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "53bc747b-008c-49d7-ada2-972d62f74516",
            "title": "changePassword",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی نامعتبر برای پسورد\"",
                "fullTitle": "Public HTTP APIs changePassword \"before all\" hook for \"ورودی نامعتبر برای پسورد\"",
                "timedOut": false,
                "duration": 553,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121904222\",\"requestId\":\"4edf2bdb-1bcf-4e81-a9af-b31ebdb8daf3\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121904222\",\"requestId\":\"4edf2bdb-1bcf-4e81-a9af-b31ebdb8daf3\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "9aef7a4e-d4eb-419f-9ade-350a9be4c87c",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای پسورد",
                "fullTitle": "Public HTTP APIs changePassword ورودی نامعتبر برای پسورد",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "6c737513-9182-4f36-a8cc-ac7bc7c6cfd6",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "6c737513-9182-4f36-a8cc-ac7bc7c6cfd6"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "375eae8c-3366-4b9a-a796-d3672e36d2d3",
            "title": "changePassword",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی معتبر برای پسورد\"",
                "fullTitle": "Public HTTP APIs changePassword \"before all\" hook for \"ورودی معتبر برای پسورد\"",
                "timedOut": false,
                "duration": 516,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121904738\",\"requestId\":\"4c8891a1-d828-4038-91d7-ce579c0cc711\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121904738\",\"requestId\":\"4c8891a1-d828-4038-91d7-ce579c0cc711\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "f649939d-22b3-43f6-ad7c-a97c5a96c0b6",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای پسورد",
                "fullTitle": "Public HTTP APIs changePassword ورودی معتبر برای پسورد",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "20399348-40b1-4990-87fa-51ef87252051",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "20399348-40b1-4990-87fa-51ef87252051"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2020
}