{
  "stats": {
    "suites": 12,
    "tests": 5,
    "passes": 3,
    "pending": 0,
    "failures": 2,
    "start": "2020-04-22T16:58:22.590Z",
    "end": "2020-04-22T16:58:29.245Z",
    "duration": 6655,
    "testsRegistered": 11,
    "passPercent": 27.3,
    "pendingPercent": 0,
    "other": 6,
    "hasOther": true,
    "skipped": 6,
    "hasSkipped": true,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "f1ec95a1-8a50-4dbc-9153-c398fc759984",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "15852ab5-990d-4ec1-aca6-aedbf11e4863",
        "title": "Public HTTP APIs",
        "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
        "file": "\\tests\\userProfile\\userProfileTest.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "8e64e101-d708-4985-a7e1-5ba0b2193c15",
            "title": "signup",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای ثبت نام",
                "fullTitle": "Public HTTP APIs signup ورودی معتبر برای ثبت نام",
                "timedOut": false,
                "duration": 355,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "6fa9873a-b5db-4537-9611-f0002f87e8ac",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6fa9873a-b5db-4537-9611-f0002f87e8ac"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 355,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "4cc69b3b-867d-41e5-be40-fed37a39ae36",
            "title": "signup",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی تکراری برای ثبت نام",
                "fullTitle": "Public HTTP APIs signup ورودی تکراری برای ثبت نام",
                "timedOut": false,
                "duration": 741,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "d61a8cee-c77b-44d7-8c07-45689596197e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d61a8cee-c77b-44d7-8c07-45689596197e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 741,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "3bbae76c-e9be-457e-8f55-62521cb79003",
            "title": "login",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای لاگین",
                "fullTitle": "Public HTTP APIs login ورودی نامعتبر برای لاگین",
                "timedOut": false,
                "duration": 655,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {
                  "message": "Error: {\"meta\":{\"code\":\"invalidConfigParam\",\"sourceType\":\"module\",\"sourceName\":\"partUtilities\",\"version\":\"5.5.0\"},\"data\":{\"message\":{\"fa\":\"پارامتر ورودی برای تنظیمات معتبر نمی باشد!\",\"en\":\"Invalid parameter for configuration!\"},\"additionalInfo\":[{\"message\":\"should be string\",\"path\":\"/error/data/message\"}]}}",
                  "estack": "Error: {\"meta\":{\"code\":\"invalidConfigParam\",\"sourceType\":\"module\",\"sourceName\":\"partUtilities\",\"version\":\"5.5.0\"},\"data\":{\"message\":{\"fa\":\"پارامتر ورودی برای تنظیمات معتبر نمی باشد!\",\"en\":\"Invalid parameter for configuration!\"},\"additionalInfo\":[{\"message\":\"should be string\",\"path\":\"/error/data/message\"}]}}\n    at Object.output (tests\\userProfile\\userProfileTest.js:582:20)\n    at testOutput (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:1031:35)\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:1021:9\n    at _rejected (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:864:24)\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:890:30\n    at Promise.when (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:1142:31)\n    at Promise.promise.promiseDispatch (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:808:41)\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:624:44\n    at runSingle (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:137:13)\n    at flush (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)"
                },
                "isRoot": false,
                "uuid": "ec9ec86b-826c-4591-a12b-d5e9b27fd799",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "ec9ec86b-826c-4591-a12b-d5e9b27fd799"
            ],
            "pending": [],
            "skipped": [],
            "duration": 655,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "ed645ce4-3f49-4778-af57-48e5bc6fc2f0",
            "title": "login",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای لاگین",
                "fullTitle": "Public HTTP APIs login ورودی معتبر برای لاگین",
                "timedOut": false,
                "duration": 700,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {
                  "message": "Error: {\"meta\":{\"code\":\"invalidConfigParam\",\"sourceType\":\"module\",\"sourceName\":\"partUtilities\",\"version\":\"5.5.0\"},\"data\":{\"message\":{\"fa\":\"پارامتر ورودی برای تنظیمات معتبر نمی باشد!\",\"en\":\"Invalid parameter for configuration!\"},\"additionalInfo\":[{\"message\":\"should have required property 'data'\",\"path\":\"\"},{\"message\":\"should have required property 'meta'\",\"path\":\"\"}]}}",
                  "estack": "Error: {\"meta\":{\"code\":\"invalidConfigParam\",\"sourceType\":\"module\",\"sourceName\":\"partUtilities\",\"version\":\"5.5.0\"},\"data\":{\"message\":{\"fa\":\"پارامتر ورودی برای تنظیمات معتبر نمی باشد!\",\"en\":\"Invalid parameter for configuration!\"},\"additionalInfo\":[{\"message\":\"should have required property 'data'\",\"path\":\"\"},{\"message\":\"should have required property 'meta'\",\"path\":\"\"}]}}\n    at Object.output (tests\\userProfile\\userProfileTest.js:582:20)\n    at testOutput (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:1031:35)\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:1021:9\n    at _rejected (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:864:24)\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:890:30\n    at Promise.when (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:1142:31)\n    at Promise.promise.promiseDispatch (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:808:41)\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:624:44\n    at runSingle (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:137:13)\n    at flush (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\q\\q.js:125:13)\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)"
                },
                "isRoot": false,
                "uuid": "57cd17e0-e325-49c3-b06e-6c746bc2615b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [
              "57cd17e0-e325-49c3-b06e-6c746bc2615b"
            ],
            "pending": [],
            "skipped": [],
            "duration": 700,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "9c7991d8-deca-49fd-aad4-59ead24c785a",
            "title": "getProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی نامعتبر برای دریافت پروفایل\"",
                "fullTitle": "Public HTTP APIs getProfile \"before all\" hook for \"ورودی نامعتبر برای دریافت پروفایل\"",
                "timedOut": false,
                "duration": 743,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    'username': 'test_724975',\n    'password': '1234'\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_19\",\n    pass: \"intern_19\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212825789\",\"requestId\":\"7b40a16f-ec70-459d-9d14-33983ba6c6c8\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212825789\",\"requestId\":\"7b40a16f-ec70-459d-9d14-33983ba6c6c8\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:632:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "edeba578-3a00-41b2-a348-ec3eef31e257",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای دریافت پروفایل",
                "fullTitle": "Public HTTP APIs getProfile ورودی نامعتبر برای دریافت پروفایل",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "996cfa0f-9da6-4e90-9377-8ccfc14f732e",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "996cfa0f-9da6-4e90-9377-8ccfc14f732e"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "44f4f42c-8020-4cd9-b974-0a5c49cb99ea",
            "title": "getProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی معتبر برای دریافت پروفایل\"",
                "fullTitle": "Public HTTP APIs getProfile \"before all\" hook for \"ورودی معتبر برای دریافت پروفایل\"",
                "timedOut": false,
                "duration": 663,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    'username': 'test_724975',\n    'password': '1234'\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_19\",\n    pass: \"intern_19\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212826453\",\"requestId\":\"c3e15b6f-e2b2-4a15-805c-319998f73f6f\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212826453\",\"requestId\":\"c3e15b6f-e2b2-4a15-805c-319998f73f6f\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:632:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "47159520-8f22-456f-a9b1-df4d7ab56d82",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای دریافت پروفایل",
                "fullTitle": "Public HTTP APIs getProfile ورودی معتبر برای دریافت پروفایل",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "e54870b9-3779-4aa3-a5bf-5d6962b85465",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "e54870b9-3779-4aa3-a5bf-5d6962b85465"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "1ab4e4e7-9250-45ff-9e3a-b339a0c5c710",
            "title": "editProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی معتبر برای ویرایش پروفایل\"",
                "fullTitle": "Public HTTP APIs editProfile \"before all\" hook for \"ورودی معتبر برای ویرایش پروفایل\"",
                "timedOut": false,
                "duration": 740,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    'username': 'test_724975',\n    'password': '1234'\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_19\",\n    pass: \"intern_19\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212827194\",\"requestId\":\"f6c1533d-ca08-4a7a-b3e9-4290063f4dcb\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212827194\",\"requestId\":\"f6c1533d-ca08-4a7a-b3e9-4290063f4dcb\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:632:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "26bd6c31-831a-4786-b6b0-16d74069cb1c",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای ویرایش پروفایل",
                "fullTitle": "Public HTTP APIs editProfile ورودی معتبر برای ویرایش پروفایل",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "2efb7a84-da60-4857-ab2c-9d0cfaa16f29",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "2efb7a84-da60-4857-ab2c-9d0cfaa16f29"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "161810c9-a642-4cb1-8004-af206f735952",
            "title": "getAllProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "خروجی برای دسترسی نداشتن",
                "fullTitle": "Public HTTP APIs getAllProfile خروجی برای دسترسی نداشتن",
                "timedOut": false,
                "duration": 268,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "4d9321a7-a6a0-4137-ad6f-ef73ebccf17f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4d9321a7-a6a0-4137-ad6f-ef73ebccf17f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 268,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "47d2e7a1-211b-4ff2-9a3c-6d0097c44d90",
            "title": "getAllProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"\"",
                "fullTitle": "Public HTTP APIs getAllProfile \"before all\" hook for \"\"",
                "timedOut": false,
                "duration": 624,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    'username': 'test_724975',\n    'password': '1234'\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_19\",\n    pass: \"intern_19\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212828088\",\"requestId\":\"8632480a-07c7-4da1-88a9-078cf1f34ac5\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212828088\",\"requestId\":\"8632480a-07c7-4da1-88a9-078cf1f34ac5\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:632:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "60cf0eda-9e2d-48f2-b914-0b10e012e422",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "",
                "fullTitle": "Public HTTP APIs getAllProfile ",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "0033a41f-b4b7-4040-8a3a-7f6c82695627",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "0033a41f-b4b7-4040-8a3a-7f6c82695627"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "2502642b-eb52-4c33-b843-42545faa8e63",
            "title": "postEmployee",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"خروجی نامعتبر برای اضافه کردن کارمند به سازمان\"",
                "fullTitle": "Public HTTP APIs postEmployee \"before all\" hook for \"خروجی نامعتبر برای اضافه کردن کارمند به سازمان\"",
                "timedOut": false,
                "duration": 584,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    'username': 'test_724975',\n    'password': '1234'\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_19\",\n    pass: \"intern_19\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212828673\",\"requestId\":\"86dd4eb3-1499-4558-af22-520c0bcb8903\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212828673\",\"requestId\":\"86dd4eb3-1499-4558-af22-520c0bcb8903\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:632:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "6b864549-5561-41c1-aa3b-d0687d27b39c",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "خروجی نامعتبر برای اضافه کردن کارمند به سازمان",
                "fullTitle": "Public HTTP APIs postEmployee خروجی نامعتبر برای اضافه کردن کارمند به سازمان",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "4c6bf3d7-c338-4d3b-8195-9fedb96680f7",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "4c6bf3d7-c338-4d3b-8195-9fedb96680f7"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "95884e46-923e-408b-a47b-bb39ea6f5fc8",
            "title": "postEmployee",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"خروجی معتبر برای اضافه کردن کارمند به سازمان\"",
                "fullTitle": "Public HTTP APIs postEmployee \"before all\" hook for \"خروجی معتبر برای اضافه کردن کارمند به سازمان\"",
                "timedOut": false,
                "duration": 569,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    'username': 'test_724975',\n    'password': '1234'\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_19\",\n    pass: \"intern_19\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212829243\",\"requestId\":\"0694a2b5-dce1-490b-ba7b-f4abe155348b\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"authEntryNotFound\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990203212829243\",\"requestId\":\"0694a2b5-dce1-490b-ba7b-f4abe155348b\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی یافت نشد!\",\"en\":\"Authentication entry not found!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:632:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "8ac58883-5076-4a02-a1b0-105370356dc9",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "خروجی معتبر برای اضافه کردن کارمند به سازمان",
                "fullTitle": "Public HTTP APIs postEmployee خروجی معتبر برای اضافه کردن کارمند به سازمان",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "f34a7f0b-3cc2-427b-afd3-daf10f039e32",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "f34a7f0b-3cc2-427b-afd3-daf10f039e32"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2020
}