{
  "stats": {
    "suites": 11,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2020-04-24T07:45:52.452Z",
    "end": "2020-04-24T07:45:57.556Z",
    "duration": 5104,
    "testsRegistered": 10,
    "passPercent": 60,
    "pendingPercent": 0,
    "other": 4,
    "hasOther": true,
    "skipped": 4,
    "hasSkipped": true,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "4b4e13f7-0c77-42fb-83f6-a758089e3162",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "20ec7fe1-ee7f-4f78-88be-f307f314fe15",
        "title": "Public HTTP APIs",
        "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
        "file": "\\tests\\userProfile\\userProfileTest.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "8d1aa809-b46e-48fe-9c1b-5ca257d0ddf1",
            "title": "signUp",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای ثبت نام",
                "fullTitle": "Public HTTP APIs signUp ورودی معتبر برای ثبت نام",
                "timedOut": false,
                "duration": 329,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "1dbe5829-39fe-4eae-9b2c-c156049b2c21",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1dbe5829-39fe-4eae-9b2c-c156049b2c21"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 329,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "3bf8404b-e2ce-4aaf-8957-4e1862254234",
            "title": "signUp",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی تکراری برای ثبت نام",
                "fullTitle": "Public HTTP APIs signUp ورودی تکراری برای ثبت نام",
                "timedOut": false,
                "duration": 293,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "65794800-303b-4fe7-83f8-e1cd65081f21",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "65794800-303b-4fe7-83f8-e1cd65081f21"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 293,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "1dd4d55d-fcad-4db7-9f87-8a615dc97479",
            "title": "login",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای لاگین",
                "fullTitle": "Public HTTP APIs login ورودی نامعتبر برای لاگین",
                "timedOut": false,
                "duration": 659,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "3deb5ff1-3572-4b62-95ce-3791bd74f49d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3deb5ff1-3572-4b62-95ce-3791bd74f49d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 659,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "8d94c4b2-aa35-4ada-a3b6-5f68b3932bdd",
            "title": "login",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای لاگین",
                "fullTitle": "Public HTTP APIs login ورودی معتبر برای لاگین",
                "timedOut": false,
                "duration": 975,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "41c3303a-03cb-4bde-a69e-d6d63b2f9a0c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "41c3303a-03cb-4bde-a69e-d6d63b2f9a0c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 975,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "a801d061-4fcb-4c35-abda-bdb6c91faf4f",
            "title": "getProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای دریافت پروفایل",
                "fullTitle": "Public HTTP APIs getProfile ورودی نامعتبر برای دریافت پروفایل",
                "timedOut": false,
                "duration": 299,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "6ba05d91-4082-420d-8e75-3765488680a3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6ba05d91-4082-420d-8e75-3765488680a3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 299,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "7fd50786-b5fe-4517-bc25-413d15b2056f",
            "title": "getProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای دریافت پروفایل",
                "fullTitle": "Public HTTP APIs getProfile ورودی معتبر برای دریافت پروفایل",
                "timedOut": false,
                "duration": 296,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "419aa606-82b6-4225-8d48-edf56c7e2c58",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "419aa606-82b6-4225-8d48-edf56c7e2c58"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 296,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "bca0b6a0-c244-47f7-a73a-e5bd98b942ee",
            "title": "editProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی معتبر برای ویرایش پروفایل\"",
                "fullTitle": "Public HTTP APIs editProfile \"before all\" hook for \"ورودی معتبر برای ویرایش پروفایل\"",
                "timedOut": false,
                "duration": 540,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121555851\",\"requestId\":\"5b95eccc-f7c8-45ef-b0c7-faeb2ce834f9\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121555851\",\"requestId\":\"5b95eccc-f7c8-45ef-b0c7-faeb2ce834f9\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "de0e082c-6c3c-4f4f-8cb1-7be4d65e5fbd",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای ویرایش پروفایل",
                "fullTitle": "Public HTTP APIs editProfile ورودی معتبر برای ویرایش پروفایل",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "17bcd08d-8cc7-4ae4-aeac-5dc4a8275ac6",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "17bcd08d-8cc7-4ae4-aeac-5dc4a8275ac6"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "faea8434-1283-4fa7-9a04-17b931106eee",
            "title": "editProfile",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی نامعتبر برای ویرایش پروفایل\"",
                "fullTitle": "Public HTTP APIs editProfile \"before all\" hook for \"ورودی نامعتبر برای ویرایش پروفایل\"",
                "timedOut": false,
                "duration": 596,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121556447\",\"requestId\":\"9befc46d-6a28-4b2e-815a-257cfb1d2157\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121556447\",\"requestId\":\"9befc46d-6a28-4b2e-815a-257cfb1d2157\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "61b393aa-980b-4bbc-87bc-ded724fdd859",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای ویرایش پروفایل",
                "fullTitle": "Public HTTP APIs editProfile ورودی نامعتبر برای ویرایش پروفایل",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "03998065-b833-4909-9a3e-6b572426a56d",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "03998065-b833-4909-9a3e-6b572426a56d"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "2623dc82-2360-4ee2-978f-82b78c1268d9",
            "title": "changePassword",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی نامعتبر برای پسورد\"",
                "fullTitle": "Public HTTP APIs changePassword \"before all\" hook for \"ورودی نامعتبر برای پسورد\"",
                "timedOut": false,
                "duration": 546,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121556993\",\"requestId\":\"1bde461f-adf9-4a15-b9fd-f8344b8fe9c2\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121556993\",\"requestId\":\"1bde461f-adf9-4a15-b9fd-f8344b8fe9c2\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "2062349a-f8a3-44bc-b9d3-2b86dcb9c99c",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی نامعتبر برای پسورد",
                "fullTitle": "Public HTTP APIs changePassword ورودی نامعتبر برای پسورد",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "cdf584bd-1d69-47dc-b076-81033645ce83",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "cdf584bd-1d69-47dc-b076-81033645ce83"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          },
          {
            "uuid": "c785e23d-489a-4454-84f3-92ae4e10835e",
            "title": "changePassword",
            "fullFile": "C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js",
            "file": "\\tests\\userProfile\\userProfileTest.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook for \"ورودی معتبر برای پسورد\"",
                "fullTitle": "Public HTTP APIs changePassword \"before all\" hook for \"ورودی معتبر برای پسورد\"",
                "timedOut": false,
                "duration": 560,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "let input1 = {\n    \"username\":\"amir98\",\n    \"password\":\"12332\"\n};\nlet option = options.get(\"POST\", \"login\");\noption.headers = {\n    user: \"intern_6\",\n    pass: \"intern_6\"\n};\nu.sendRequest(option, \"\", input1, function (err, res) {\n    if (err) {\n        done(JSON.stringify(err));\n    } else {\n        console.log('login \\t' + res.data.token)\n        opt.headers = {\n            token: res.data.token\n        };\n        opt.headers = opt.headers || {};\n        opt.headers.cookie = 'token=' + res.data.token;\n        opt.token = res.data.token;\n        done();\n    }\n});",
                "err": {
                  "message": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121557554\",\"requestId\":\"6cb7fecb-0a40-421d-867a-018b6c4420ad\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}",
                  "estack": "Error: done() invoked with non-Error: {\"meta\":{\"code\":\"wrongAuthEntry\",\"sourceType\":\"service\",\"sourceName\":\"partServiceAuthentication\",\"version\":\"7.3.6\",\"shamsiDate\":\"13990205121557554\",\"requestId\":\"6cb7fecb-0a40-421d-867a-018b6c4420ad\"},\"data\":{\"message\":{\"fa\":\"ترکیب اصالت سنجی اشتباه است!\",\"en\":\"Wrong authentication entry!\"}}}\n    at C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUserProfile\\tests\\userProfile\\userProfileTest.js:271:17\n    at Request._callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\partUtilities\\lib\\main.js:562:15)\n    at Request.self.callback (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:188:22)\n    at Request.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1171:10)\n    at IncomingMessage.<anonymous> (C:\\Users\\sorou\\Desktop\\node\\prj3\\partFramework_interface\\node_modules\\request\\request.js:1091:12)\n    at endReadableNT (_stream_readable.js:1204:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)"
                },
                "isRoot": false,
                "uuid": "7a7cc3b5-f259-4b10-b001-704f0f5b4ce4",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "ورودی معتبر برای پسورد",
                "fullTitle": "Public HTTP APIs changePassword ورودی معتبر برای پسورد",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "sendRequest(testCase.options, path, data)\n  .then(function (r) {\n    testOutput(r, testCase, done);\n    callback(null, r);\n  })\n  .fail(function (e) {\n    if (typeof e === 'object' && e.hasOwnProperty('message')\n      && e.message.en === 'Error while sending http(s) request!') {\n      done(new Error(JSON.stringify(e.message)));\n      return;\n    }\n    testOutput({status: 'error', error: e}, testCase, done);\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "6f7fe182-9743-4f8a-9243-0d762c4fdc26",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [
              "6f7fe182-9743-4f8a-9243-0d762c4fdc26"
            ],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 40000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2020
}